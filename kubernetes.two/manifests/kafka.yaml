---
apiVersion: v1
kind: Service
metadata:
  name: kafkasrv
  labels:
    name: kafkasrv
  namespace: pushtech
spec:
  clusterIP: None
  ports:
  - port: 9092
    targetPort: 9092
  selector:
    name: kafka
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kafka
  labels:
    name: kafka
  namespace: pushtech
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: kafka
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka:0.10.2.0
          ports:
            - name: kafka
              containerPort: 9092
          env:
            - name: KAFKA_CREATE_TOPICS
              value: test:1:1
            - name: KAFKA_ADVERTISED_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper.pushtech.svc.cluster.local:2181
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
              # Can't use BROKER_ID_COMMAND since we're using 0.10.0 branch
              # see --> https://github.com/wurstmeister/kafka-docker/blob/0.10.0/start-kafka.sh
            - name: CUSTOM_INIT_SCRIPT
              value: "KAFKA_BROKER_ID=$(ifconfig | grep \"inet addr\" | grep -v 127.0.0.1 | awk '// {sub(\"addr:\",\"\",$2); gsub(\"[.]\",\"\",$2); print substr($2,5,3);}') ; echo \"broker.id=$KAFKA_BROKER_ID\" >> $KAFKA_HOME/config/server.properties"
      initContainers:
         - name: wait-on-zookeeper-service
           image: busybox
           command: ['sh', '-c', 'until nslookup zookeeper.pushtech.svc.cluster.local; do echo waiting for myservice; sleep 2; done;']
