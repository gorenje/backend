version: '2'
services:
  redisnotserver:
    image: redis
    ports:
      - "6379"
    volumes:
      - notserverredisdb:/data

  pgnotserver:
    image: postgres:9.6.6
    restart: always
    environment:
      - POSTGRES_PASSWORD=nicesecret
    ports:
      - "5432"
    volumes:
      - notserverdb:/var/lib/postgresql/data

  notificationserver:
    build: ../src/notificationserver
    ports:
      - "$NOTIFICATION_SERVER_PORT:$NOTIFICATION_SERVER_PORT"
    command: "/bin/bash -c 'rake docker:pause_for_postgres && \
                            rake docker:pause_for_redis    && \
                            rake docker:if_db_is_migrated  && \
                            foreman start web'"
    links:
      - pgnotserver
      - redisnotserver
    environment:
      - RACK_ENV=production
      - PORT=$NOTIFICATION_SERVER_PORT
      - DATABASE_URL=postgres://postgres:nicesecret@pgnotserver:5432/notserver
      - PUSHTECH_API_HOST=http://storage:$STORAGE_PORT
      - ONESIGNAL_API_KEY=$ONESIGNAL_API_KEY
      - ONESIGNAL_USER_AUTH_KEY=$ONESIGNAL_USER_AUTH_KEY
      - ONESIGNAL_APP_ID=$ONESIGNAL_APP_ID
      - SENDBIRD_API_TOKEN=$SENDBIRD_API_TOKEN
      - SENDBIRD_API_ID=$SENDBIRD_API_ID
      - REDISTOGO_URL=redis://redisnotserver:6379/12
      - TRACKING_HOST=http://tracker:$TRACKER_PORT
      - DB_POOL_SIZE=20
      - DB_TIMEOUT_MSEC=5000
      - WEB_TIMEOUT=30
      - RATE_LIMIT_SECONDS=300
    restart: always

  notserver-migrate-db:
    build: ../src/notificationserver
    command: "/bin/bash -c 'rake docker:pause_for_postgres         && \
                            rake docker:if_db_not_migrated         && \
                            rake db:create                         && \
                            rake docker:create_postgres_extensions && \
                            rake db:migrate'"
    links:
      - pgnotserver
    environment:
      - RACK_ENV=production
      - DATABASE_URL=postgres://postgres:nicesecret@pgnotserver:5432/notserver
    restart: "no"

networks:
  default:
    external:
      name: thenetwork

volumes:
  notserverdb:
    external: true
  notserverredisdb:
    external: true
