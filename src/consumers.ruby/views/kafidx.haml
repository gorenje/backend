.row
  .col-md-6
    %h1 Live Kafka Events
  .col-md-6
    .pull-right
      %a{ :href => "https://trk.pushtech.de/w/test?param=params", :target => "_blank" }
        Test Event

Current Group Id:
%b= session[:kafka_group_id]
%a{ :href => "/kafidx/getgroupid" } Reset Group Id
%span#messageCounterField

#events-listing

%script{:src => "//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"}
%script{ :src => "//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js" }

%script#handler-listing-template{:type => "text/x-underscore-template"}
  %span{ :class => "kafkaevent" }
    %br
    %font{ :class => "kegame", :title => "Topic / Partition / Offset" }
      {{topic}} / {{_partition_}} / {{_offset_}}
    %font{ :class => "kedate", :title => "{{time}}" }
      {{ts}}
    %font{ :class => "kelag" }
      [{{klag}}s]
    %a{ :onclick => "alert('{{_msgvalue_}}'); return false;" }
      R
    %font{ :class => "keip" }
      {{ip_dot}}
    %font{ :class => "ketype" }
      {{type}}
    %span
      {{params}}

:javascript
  var messageCounter = 0;

  function updateMessageCount() {
    messageCounter += 1;
    $('#messageCounterField').html(messageCounter);
  }

  function getQueryVariable(variable) {
      var query = window.location.search.substring(1);
      var vars = query.split('&');
      for (var i = 0; i < vars.length; i++) {
          var pair = vars[i].split('=');
          if (decodeURIComponent(pair[0]) == variable) {
              return decodeURIComponent(pair[1]);
          }
      }
      return null;
  }

  document.addEventListener("DOMContentLoaded", function() {
    _.templateSettings = {
      interpolate: /\{\{(.+?)\}\}/g
    };

    var filter = getQueryVariable("filter");

    var scheme   = "#{@ws_scheme}://";
    var uri      = scheme + window.document.location.host + "/";
    var ws       = new WebSocket(uri);
    var template = _.template($('#handler-listing-template').html());

    ws.onmessage = function(message) {
      updateMessageCount();
      if ( filter ) {
        var eventtype = JSON.parse(message.data)["type"];
        if ( filter === eventtype ) {
          $("#events-listing").prepend(template(JSON.parse(message.data)));
        }
      } else {
        $("#events-listing").prepend(template(JSON.parse(message.data)));
      }
    };
  });

:css
  #events-listing {
    background-color:black;
    color:yellow;
    font-size:small;
  }

  .kafkaevent a {
    color: orange;
    text-decoration: none;
  }

  .kafkaevent .kegame {
    color: lightblue;
  }

  .kafkaevent .kedate {
    color: pink;
  }

  .kafkaevent .kelag {
    color: red;
  }

  .kafkaevent .keip a {
    color: pink;
  }

  .kafkaevent .ketype {
    color: pink;
  }
