---
apiVersion: v1
kind: Service
metadata:
  annotations:
    subdomain.name: www
  labels:
    io.kompose.service: website
  name: website
spec:
  type: LoadBalancer
  ports:
  - port: 5123
    targetPort: 5123
    nodePort: 30223
  selector:
    provide.service: website

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: website
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        provide.service: website
    spec:
      imagePullSecrets:
      - name: meatdocker
      restartPolicy: Always
      volumes:
      - name: websiteenv
        persistentVolumeClaim:
          claimName: websiteenv
      initContainers:
      - image: pushtech.website:v1
        name: website-migrate-db
        args:
        - /bin/bash
        - -c
        - (rake docker:pause_for_db               &&
           rake docker:if_db_not_migrated         &&
           rake db:create                         &&
           rake docker:create_postgres_extensions &&
           rake db:migrate) ; exit 0
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: k8scfg
              key: WEBSITE_DB_URL
        - name: RACK_ENV
          value: production
      containers:
      - image: pushtech.website:v1
        name: website
        args:
        - /bin/bash
        - -c
        - rake docker:pause_for_db      &&
          rake docker:if_db_is_migrated &&
          rake appjson:to_dotenv        &&
          foreman start web
        env:
        - name: ASSETS_HOST
          valueFrom:
            secretKeyRef:
              name: k8scfg
              key: IMAGE_HOST
        - name: EXTERNAL_ASSETS_HOST
          valueFrom:
            secretKeyRef:
              name: extcfg
              key: EXTERNAL_ASSETS_HOST
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: k8scfg
              key: WEBSITE_DB_URL
        - name: DB_POOL_SIZE
          value: "20"
        - name: DB_TIMEOUT_MSEC
          value: "5000"
        - name: DOCKER_ENV_STORE
          value: /var/lib/website/env
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: envsecrets
              key: GOOGLE_API_KEY
        - name: LOGIN_HOST
          valueFrom:
            secretKeyRef:
              name: extcfg
              key: LOGIN_HOST
        - name: MANDRILL_API_KEY
          valueFrom:
            secretKeyRef:
              name: envsecrets
              key: MANDRILL_API_KEY
        - name: NOTIFIER_HOST
          valueFrom:
            secretKeyRef:
              name: k8scfg
              key: NOTIFY_HOST
        - name: PORT
          valueFrom:
            secretKeyRef:
              name: envsecrets
              key: WEBSITE_PORT
        - name: PROFILE_HOST
          valueFrom:
            secretKeyRef:
              name: extcfg
              key: PROFILE_HOST
        - name: PUSHTECH_API_HOST
          valueFrom:
            secretKeyRef:
              name: k8scfg
              key: PUSHTECH_API_HOST
        - name: PUSHTECH_API_PASSWORD
          valueFrom:
            secretKeyRef:
              name: envsecrets
              key: PUSHTECH_API_PASSWORD
        - name: PUSHTECH_API_USER
          valueFrom:
            secretKeyRef:
              name: envsecrets
              key: PUSHTECH_API_USER
        - name: RACK_ENV
          value: development
        - name: SENDBIRD_API_ID
          valueFrom:
            secretKeyRef:
              name: envsecrets
              key: SENDBIRD_API_ID
        - name: SENDBIRD_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: envsecrets
              key: SENDBIRD_API_TOKEN
        - name: TRACKER_HOST
          valueFrom:
            secretKeyRef:
              name: k8scfg
              key: TRACKER_HOST
        ports:
        - containerPort: 5123
        volumeMounts:
        - mountPath: /var/lib/website/env
          name: websiteenv
